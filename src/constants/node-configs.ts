// constants/node-configs.ts
import type { NodeConfig, FlowNodeType } from "../types/flow.types";
import {
  Download,
  Settings,
  Upload,
  FileCheck2,
  FilePenLine,
} from "lucide-react";
import {
  GitBranch,
  Network,
  Mail,
  HandshakeIcon,
  FileChartPie,
} from "lucide-react";
export const NODE_CONFIGURATIONS: Record<FlowNodeType, NodeConfig> = {
  input: {
    type: "input",
    label: "Input Node",
    bgColor: "bg-emerald-100",
    textColor: "text-emerald-700",
    hoverBgColor: "hover:bg-emerald-200",
    icon: Download,
    iconColor: "text-emerald-600",
    description: "Data source or entry point",
    hasModal: true,
  },
  default: {
    type: "default",
    label: "Process Node",
    bgColor: "bg-blue-100",
    textColor: "text-blue-700",
    hoverBgColor: "hover:bg-blue-200",
    icon: Settings,
    iconColor: "text-blue-600",
    description: "Data processing or transformation",
    hasModal: true,
  },
  output: {
    type: "output",
    label: "Output Node",
    bgColor: "bg-violet-100",
    textColor: "text-violet-700",
    hoverBgColor: "hover:bg-violet-200",
    icon: Upload,
    iconColor: "text-violet-600",
    description: "Final result or destination",
    hasModal: true,
  },
  approval: {
    type: "approval",
    label: "Approval",
    bgColor: "bg-red-100",
    textColor: "text-red-700",
    hoverBgColor: "hover:bg-red-200",
    icon: FileCheck2,
    iconColor: "text-red-600",
    description: "Approval step in workflow",
    hasModal: true,
  },
  sign: {
    type: "sign",
    label: "Approval & Sign",
    bgColor: "bg-sky-100",
    textColor: "text-sky-700",
    hoverBgColor: "hover:bg-sky-200",
    icon: FilePenLine,
    iconColor: "text-sky-600",
    description: "Approval step in workflow",
    hasModal: true,
  },
  pdf: {
    type: "pdf",
    label: "PDF",
    bgColor: "bg-sky-100",
    textColor: "text-sky-700",
    hoverBgColor: "hover:bg-sky-200",
    icon: FileChartPie,
    iconColor: "text-sky-600",
    description: "PDF step in workflow",
    hasModal: true,
  },
  teamApproval: {
    type: "teamApproval",
    label: "Team Approval",
    bgColor: "bg-pink-100",
    textColor: "text-pink-700",
    hoverBgColor: "hover:bg-pink-200",
    icon: HandshakeIcon,
    iconColor: "text-pink-600",
    description: "Team Approval",
    hasModal: true,
  },
  email: {
    type: "email",
    label: "Email",
    bgColor: "bg-blue-100",
    textColor: "text-blue-700",
    hoverBgColor: "hover:bg-blue-200",
    icon: Mail,
    iconColor: "text-blue-600",
    description: "Employee Email",
    hasModal: true,
  },
  condition: {
    type: "condition",
    label: "If/Else Condition",
    bgColor: "bg-yellow-100",
    textColor: "text-yellow-700",
    hoverBgColor: "hover:bg-yellow-200",
    icon: GitBranch,
    iconColor: "text-yellow-600",
    description: "Logical condition to branch workflow",
    hasModal: true,
  },
  branch: {
    type: "branch",
    label: "Conditional Branch",
    bgColor: "bg-gray-100",
    textColor: "text-gray-700",
    hoverBgColor: "hover:bg-gray-200",
    icon: Network,
    iconColor: "text-gray-600",
    description:
      "Conditional Branches direct your workflow along one of many paths.",
    hasModal: true,
  },
} as const;

export const DRAG_DATA_TRANSFER_KEY = "application/reactflow";
